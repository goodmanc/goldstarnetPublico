<?php

/**
 * This is the model base class for the table "clientecontacto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ClienteContacto".
 *
 * Columns in table "clientecontacto" available as properties of the model,
 * followed by relations of table "clientecontacto" available as properties of the model.
 *
 * @property integer $id
 * @property integer $cliente_id
 * @property string $primerNombre
 * @property string $segundoNombre
 * @property string $apellidos
 * @property string $titulo
 * @property string $posision
 * @property string $direccion
 * @property string $tel1
 * @property string $tel2
 * @property string $movil
 * @property string $fax
 * @property string $notas1
 * @property string $notas2
 * @property string $email
 * @property string $status
 * @property integer $used_by
 * @property string $check_in
 * @property integer $created_by
 * @property string $created
 * @property integer $modified_by
 * @property string $modified
 *
 * @property Cliente $cliente
 */
abstract class BaseClienteContacto extends AweActiveRecord {


    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'clientecontacto';
    }

    public static function representingColumn() {
        return 'primerNombre';
    }

    public function rules() {
        return array(
            array(	'id, cliente_id, primerNombre',
					'required',
					'message' => Yii::t('app', 'Field is required')
			),
            array(	'id, cliente_id, used_by, created_by, modified_by',
					'numerical',
					'integerOnly'=>true
			),
            array(	'primerNombre, segundoNombre, apellidos, titulo, posision, direccion, tel1, tel2, movil, fax, email',
					'length',
					'max'=>50,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'notas1, notas2',
					'length',
					'max'=>100,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'status',
					'length',
					'max'=>1,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'check_in, created, modified',
					'safe'
			),
            array('segundoNombre, apellidos, titulo, posision, direccion, tel1, tel2, movil, fax, notas1, notas2, email, status, used_by, check_in, created_by, created, modified_by, modified',
					'default',
					'setOnEmpty' => true,
					'value' => null
			),
            array('id, cliente_id, primerNombre, segundoNombre, apellidos, titulo, posision, direccion, tel1, tel2, movil, fax, notas1, notas2, email, status, used_by, check_in, created_by, created, modified_by, modified', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'cliente' => array(self::BELONGS_TO, 'Cliente', 'cliente_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'cliente_id' => Yii::t('app', 'Cliente'),
                'primerNombre' => Yii::t('app', 'Primer Nombre'),
                'segundoNombre' => Yii::t('app', 'Segundo Nombre'),
                'apellidos' => Yii::t('app', 'Apellidos'),
                'titulo' => Yii::t('app', 'Titulo'),
                'posision' => Yii::t('app', 'Posision'),
                'direccion' => Yii::t('app', 'Direccion'),
                'tel1' => Yii::t('app', 'Tel1'),
                'tel2' => Yii::t('app', 'Tel2'),
                'movil' => Yii::t('app', 'Movil'),
                'fax' => Yii::t('app', 'Fax'),
                'notas1' => Yii::t('app', 'Notas1'),
                'notas2' => Yii::t('app', 'Notas2'),
                'email' => Yii::t('app', 'Email'),
                'status' => Yii::t('app', 'Status'),
                'used_by' => Yii::t('app', 'Used By'),
                'check_in' => Yii::t('app', 'Check In'),
                'created_by' => Yii::t('app', 'Created By'),
                'created' => Yii::t('app', 'Created'),
                'modified_by' => Yii::t('app', 'Modified By'),
                'modified' => Yii::t('app', 'Modified'),
                'cliente' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('cliente_id', $this->cliente_id);
        $criteria->compare('primerNombre', $this->primerNombre, true);
        $criteria->compare('segundoNombre', $this->segundoNombre, true);
        $criteria->compare('apellidos', $this->apellidos, true);
        $criteria->compare('titulo', $this->titulo, true);
        $criteria->compare('posision', $this->posision, true);
        $criteria->compare('direccion', $this->direccion, true);
        $criteria->compare('tel1', $this->tel1, true);
        $criteria->compare('tel2', $this->tel2, true);
        $criteria->compare('movil', $this->movil, true);
        $criteria->compare('fax', $this->fax, true);
        $criteria->compare('notas1', $this->notas1, true);
        $criteria->compare('notas2', $this->notas2, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('used_by', $this->used_by);
        $criteria->compare('check_in', $this->check_in, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified_by', $this->modified_by);
        $criteria->compare('modified', $this->modified, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}