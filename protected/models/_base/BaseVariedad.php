<?php

/**
 * This is the model base class for the table "variedad".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Variedad".
 *
 * Columns in table "variedad" available as properties of the model,
 * followed by relations of table "variedad" available as properties of the model.
 *
 * @property integer $id
 * @property integer $especie_id
 * @property string $nombre
 * @property integer $propiedad1
 * @property integer $propiedad2
 * @property integer $propiedad3
 * @property integer $propiedad4
 * @property integer $propiedad5
 * @property integer $propiedad6
 * @property integer $propiedad7
 * @property integer $propiedad8
 * @property integer $propiedad9
 * @property integer $propiedad10
 * @property integer $propiedad11
 * @property integer $propiedad12
 * @property integer $propiedad13
 * @property integer $propiedad14
 * @property integer $propiedad15
 * @property integer $propiedad16
 * @property string $status
 * @property integer $used_by
 * @property string $check_in
 * @property integer $created_by
 * @property string $created
 * @property integer $modified_by
 * @property string $modified
 *
 * @property Catalogo[] $catalogos
 * @property Especie $especie
 */
abstract class BaseVariedad extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'variedad';
    }

    public static function representingColumn() {
        return 'nombre';
    }

    public function rules() {
        return array(
            array(	'especie_id, nombre',
					'required',
					'message' => Yii::t('app', 'Field is required')
			),
            array(	'especie_id, propiedad1, propiedad2, propiedad3, propiedad4, propiedad5, propiedad6, propiedad7, propiedad8, propiedad9, propiedad10, propiedad11, propiedad12, propiedad13, propiedad14, propiedad15, propiedad16, used_by, created_by, modified_by',
					'numerical',
					'integerOnly'=>true
			),
            array(	'nombre',
					'length',
					'max'=>50,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'status',
					'length',
					'max'=>1,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'check_in, created, modified',
					'safe'
			),
            array('propiedad1, propiedad2, propiedad3, propiedad4, propiedad5, propiedad6, propiedad7, propiedad8, propiedad9, propiedad10, propiedad11, propiedad12, propiedad13, propiedad14, propiedad15, propiedad16, status, used_by, check_in, created_by, created, modified_by, modified',
					'default',
					'setOnEmpty' => true,
					'value' => null
			),
            array('id, especie_id, nombre, propiedad1, propiedad2, propiedad3, propiedad4, propiedad5, propiedad6, propiedad7, propiedad8, propiedad9, propiedad10, propiedad11, propiedad12, propiedad13, propiedad14, propiedad15, propiedad16, status, used_by, check_in, created_by, created, modified_by, modified', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'catalogos' => array(self::HAS_MANY, 'Catalogo', 'variedad_id'),
            'especie' => array(self::BELONGS_TO, 'Especie', 'especie_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'especie_id' => Yii::t('app', 'Especie'),
                'nombre' => Yii::t('app', 'Nombre'),
                'propiedad1' => Yii::t('app', 'Propiedad1'),
                'propiedad2' => Yii::t('app', 'Propiedad2'),
                'propiedad3' => Yii::t('app', 'Propiedad3'),
                'propiedad4' => Yii::t('app', 'Propiedad4'),
                'propiedad5' => Yii::t('app', 'Propiedad5'),
                'propiedad6' => Yii::t('app', 'Propiedad6'),
                'propiedad7' => Yii::t('app', 'Propiedad7'),
                'propiedad8' => Yii::t('app', 'Propiedad8'),
                'propiedad9' => Yii::t('app', 'Propiedad9'),
                'propiedad10' => Yii::t('app', 'Propiedad10'),
                'propiedad11' => Yii::t('app', 'Propiedad11'),
                'propiedad12' => Yii::t('app', 'Propiedad12'),
                'propiedad13' => Yii::t('app', 'Propiedad13'),
                'propiedad14' => Yii::t('app', 'Propiedad14'),
                'propiedad15' => Yii::t('app', 'Propiedad15'),
                'propiedad16' => Yii::t('app', 'Propiedad16'),
                'status' => Yii::t('app', 'Status'),
                'used_by' => Yii::t('app', 'Used By'),
                'check_in' => Yii::t('app', 'Check In'),
                'created_by' => Yii::t('app', 'Created By'),
                'created' => Yii::t('app', 'Created'),
                'modified_by' => Yii::t('app', 'Modified By'),
                'modified' => Yii::t('app', 'Modified'),
                'catalogos' => null,
                'especie' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('especie_id', $this->especie_id);
        $criteria->compare('nombre', $this->nombre, true);
        $criteria->compare('propiedad1', $this->propiedad1);
        $criteria->compare('propiedad2', $this->propiedad2);
        $criteria->compare('propiedad3', $this->propiedad3);
        $criteria->compare('propiedad4', $this->propiedad4);
        $criteria->compare('propiedad5', $this->propiedad5);
        $criteria->compare('propiedad6', $this->propiedad6);
        $criteria->compare('propiedad7', $this->propiedad7);
        $criteria->compare('propiedad8', $this->propiedad8);
        $criteria->compare('propiedad9', $this->propiedad9);
        $criteria->compare('propiedad10', $this->propiedad10);
        $criteria->compare('propiedad11', $this->propiedad11);
        $criteria->compare('propiedad12', $this->propiedad12);
        $criteria->compare('propiedad13', $this->propiedad13);
        $criteria->compare('propiedad14', $this->propiedad14);
        $criteria->compare('propiedad15', $this->propiedad15);
        $criteria->compare('propiedad16', $this->propiedad16);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('used_by', $this->used_by);
        $criteria->compare('check_in', $this->check_in, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified_by', $this->modified_by);
        $criteria->compare('modified', $this->modified, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}