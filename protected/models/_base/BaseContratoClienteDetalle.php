<?php

/**
 * This is the model base class for the table "contratoclientedetalle".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ContratoClienteDetalle".
 *
 * Columns in table "contratoclientedetalle" available as properties of the model,
 * followed by relations of table "contratoclientedetalle" available as properties of the model.
 *
 * @property integer $id
 * @property integer $contratoCliente_id
 * @property integer $variedad_id
 * @property string $subNumCat
 * @property string $codigoGoldStar
 * @property string $nombreExportacion
 * @property double $baseRate
 * @property double $hactares
 * @property double $kgs
 * @property string $moneda_id
 * @property double $price
 * @property double $lineTotal
 * @property double $totalFrgn
 * @property string $proyecto_id
 * @property double $stockSeed
 * @property string $proyect
 * @property string $status
 * @property integer $used_by
 * @property string $check_in
 * @property integer $created_by
 * @property string $created
 * @property integer $modified_by
 * @property string $modified
 *
 * @property Contratoagricultor[] $contratoagricultors
 * @property Moneda $moneda
 * @property Variedad $variedad
 */
abstract class BaseContratoClienteDetalle extends AweActiveRecord {


    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'contratoclientedetalle';
    }

    public static function representingColumn() {
        return 'proyecto_id';
    }

    public function rules() {
        return array(
            array(	'contratoCliente_id, variedad_id, moneda_id, proyecto_id',
					'required',
					'message' => Yii::t('app', 'Field is required')
			),
            array(	'contratoCliente_id, variedad_id, used_by, created_by, modified_by',
					'numerical',
					'integerOnly'=>true
			),
            array(	'baseRate, hactares, kgs, price, lineTotal, totalFrgn, stockSeed',
					'numerical'
			),
            array(	'subNumCat',
					'length',
					'max'=>30,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'codigoGoldStar, nombreExportacion',
					'length',
					'max'=>40,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'moneda_id',
					'length',
					'max'=>4,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'proyecto_id, proyect',
					'length',
					'max'=>20,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'status',
					'length',
					'max'=>1,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'check_in, created, modified',
					'safe'
			),
            array('subNumCat, codigoGoldStar, nombreExportacion, baseRate, hactares, kgs, price, lineTotal, totalFrgn, stockSeed, proyect, status, used_by, check_in, created_by, created, modified_by, modified',
					'default',
					'setOnEmpty' => true,
					'value' => null
			),
            array('id, contratoCliente_id, variedad_id, subNumCat, codigoGoldStar, nombreExportacion, baseRate, hactares, kgs, moneda_id, price, lineTotal, totalFrgn, proyecto_id, stockSeed, proyect, status, used_by, check_in, created_by, created, modified_by, modified', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'contratoagricultors' => array(self::HAS_MANY, 'Contratoagricultor', 'contratoclientedetalle_id'),
            'moneda' => array(self::BELONGS_TO, 'Moneda', 'moneda_id'),
            'variedad' => array(self::BELONGS_TO, 'Variedad', 'variedad_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'contratoCliente_id' => Yii::t('app', 'Contrato Cliente'),
                'variedad_id' => Yii::t('app', 'Variedad'),
                'subNumCat' => Yii::t('app', 'Sub Num Cat'),
                'codigoGoldStar' => Yii::t('app', 'Codigo Gold Star'),
                'nombreExportacion' => Yii::t('app', 'Nombre Exportacion'),
                'baseRate' => Yii::t('app', 'Base Rate'),
                'hactares' => Yii::t('app', 'Hactares'),
                'kgs' => Yii::t('app', 'Kgs'),
                'moneda_id' => Yii::t('app', 'Moneda'),
                'price' => Yii::t('app', 'Price'),
                'lineTotal' => Yii::t('app', 'Line Total'),
                'totalFrgn' => Yii::t('app', 'Total Frgn'),
                'proyecto_id' => Yii::t('app', 'Proyecto'),
                'stockSeed' => Yii::t('app', 'Stock Seed'),
                'proyect' => Yii::t('app', 'Proyect'),
                'status' => Yii::t('app', 'Status'),
                'used_by' => Yii::t('app', 'Used By'),
                'check_in' => Yii::t('app', 'Check In'),
                'created_by' => Yii::t('app', 'Created By'),
                'created' => Yii::t('app', 'Created'),
                'modified_by' => Yii::t('app', 'Modified By'),
                'modified' => Yii::t('app', 'Modified'),
                'contratoagricultors' => null,
                'moneda' => null,
                'variedad' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('contratoCliente_id', $this->contratoCliente_id);
        $criteria->compare('variedad_id', $this->variedad_id);
        $criteria->compare('subNumCat', $this->subNumCat, true);
        $criteria->compare('codigoGoldStar', $this->codigoGoldStar, true);
        $criteria->compare('nombreExportacion', $this->nombreExportacion, true);
        $criteria->compare('baseRate', $this->baseRate);
        $criteria->compare('hactares', $this->hactares);
        $criteria->compare('kgs', $this->kgs);
        $criteria->compare('moneda_id', $this->moneda_id);
        $criteria->compare('price', $this->price);
        $criteria->compare('lineTotal', $this->lineTotal);
        $criteria->compare('totalFrgn', $this->totalFrgn);
        $criteria->compare('proyecto_id', $this->proyecto_id, true);
        $criteria->compare('stockSeed', $this->stockSeed);
        $criteria->compare('proyect', $this->proyect, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('used_by', $this->used_by);
        $criteria->compare('check_in', $this->check_in, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified_by', $this->modified_by);
        $criteria->compare('modified', $this->modified, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}