<?php

/**
 * This is the model base class for the table "fbcolasignada".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FbColAsignada".
 *
 * Columns in table "fbcolasignada" available as properties of the model,
 * followed by relations of table "fbcolasignada" available as properties of the model.
 *
 * @property integer $id
 * @property integer $fieldbook_id
 * @property integer $fbColumna_id
 * @property string $status
 * @property integer $used_by
 * @property string $check_in
 * @property integer $created_by
 * @property string $created
 * @property integer $modified_by
 * @property string $modified
 *
 * @property Fbcolumna $fbColumna
 * @property Fieldbook $fieldbook
 * @property Fbdato[] $fbdatos
 * @property Fbreportecolumnas[] $fbreportecolumnases
 */
abstract class BaseFbColAsignada extends AweActiveRecord {


    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'fbcolasignada';
    }

    public static function representingColumn() {
        return 'status';
    }

    public function rules() {
        return array(
            array(	'fieldbook_id, fbColumna_id',
					'required',
					'message' => Yii::t('app', 'Field is required')
			),
            array(	'fieldbook_id, fbColumna_id, used_by, created_by, modified_by',
					'numerical',
					'integerOnly'=>true
			),
            array(	'status',
					'length',
					'max'=>1,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'check_in, created, modified',
					'safe'
			),
            array('status, used_by, check_in, created_by, created, modified_by, modified',
					'default',
					'setOnEmpty' => true,
					'value' => null
			),
            array('id, fieldbook_id, fbColumna_id, status, used_by, check_in, created_by, created, modified_by, modified', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'fbcolumna' => array(self::BELONGS_TO, 'Fbcolumna', 'fbColumna_id'),
            'fieldbook' => array(self::BELONGS_TO, 'Fieldbook', 'fieldbook_id'),
            'fbdatos' => array(self::HAS_MANY, 'Fbdato', 'fbColAsignada_id'),
            'fbreportecolumnases' => array(self::HAS_MANY, 'Fbreportecolumnas', 'fbColAsignada_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'fieldbook_id' => Yii::t('app', 'Fieldbook'),
                'fbColumna_id' => Yii::t('app', 'Fb Columna'),
                'status' => Yii::t('app', 'Status'),
                'used_by' => Yii::t('app', 'Used By'),
                'check_in' => Yii::t('app', 'Check In'),
                'created_by' => Yii::t('app', 'Created By'),
                'created' => Yii::t('app', 'Created'),
                'modified_by' => Yii::t('app', 'Modified By'),
                'modified' => Yii::t('app', 'Modified'),
                'fbColumna' => null,
                'fieldbook' => null,
                'fbdatos' => null,
                'fbreportecolumnases' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('fieldbook_id', $this->fieldbook_id);
        $criteria->compare('fbColumna_id', $this->fbColumna_id);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('used_by', $this->used_by);
        $criteria->compare('check_in', $this->check_in, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified_by', $this->modified_by);
        $criteria->compare('modified', $this->modified, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}