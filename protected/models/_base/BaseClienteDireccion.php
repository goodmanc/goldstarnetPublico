<?php

/**
 * This is the model base class for the table "clientedireccion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ClienteDireccion".
 *
 * Columns in table "clientedireccion" available as properties of the model,
 * followed by relations of table "clientedireccion" available as properties of the model.
 *
 * @property integer $id
 * @property integer $cliente_id
 * @property string $code
 * @property string $calle
 * @property string $poblacion
 * @property string $ciudad
 * @property string $pobox
 * @property string $comuna
 * @property string $pais_id
 * @property string $ref1
 * @property string $ref2
 * @property string $status
 * @property integer $used_by
 * @property string $check_in
 * @property integer $created_by
 * @property string $created
 * @property integer $modified_by
 * @property string $modified
 *
 * @property Cliente $cliente
 * @property Pais $pais
 */
abstract class BaseClienteDireccion extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'clientedireccion';
    }

    public static function representingColumn() {
        return 'code';
    }

    public function rules() {
        return array(
            array(	'cliente_id, code, pais_id',
					'required',
					'message' => Yii::t('app', 'Field is required')
			),
            array(	'cliente_id, used_by, created_by, modified_by',
					'numerical',
					'integerOnly'=>true
			),
            array(	'code',
					'length',
					'max'=>50,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'calle, poblacion, ciudad, comuna, ref1, ref2',
					'length',
					'max'=>100,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'pobox',
					'length',
					'max'=>20,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'pais_id',
					'length',
					'max'=>2,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'status',
					'length',
					'max'=>1,
					'tooLong' => Yii::t('app', 'Field is required')
			),
            array(	'check_in, created, modified',
					'safe'
			),
            array('calle, poblacion, ciudad, pobox, comuna, ref1, ref2, status, used_by, check_in, created_by, created, modified_by, modified',
					'default',
					'setOnEmpty' => true,
					'value' => null
			),
            array('id, cliente_id, code, calle, poblacion, ciudad, pobox, comuna, pais_id, ref1, ref2, status, used_by, check_in, created_by, created, modified_by, modified', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'cliente' => array(self::BELONGS_TO, 'Cliente', 'cliente_id'),
            'pais' => array(self::BELONGS_TO, 'Pais', 'pais_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'cliente_id' => Yii::t('app', 'Cliente'),
                'code' => Yii::t('app', 'Code'),
                'calle' => Yii::t('app', 'Calle'),
                'poblacion' => Yii::t('app', 'Poblacion'),
                'ciudad' => Yii::t('app', 'Ciudad'),
                'pobox' => Yii::t('app', 'Pobox'),
                'comuna' => Yii::t('app', 'Comuna'),
                'pais_id' => Yii::t('app', 'Pais'),
                'ref1' => Yii::t('app', 'Ref1'),
                'ref2' => Yii::t('app', 'Ref2'),
                'status' => Yii::t('app', 'Status'),
                'used_by' => Yii::t('app', 'Used By'),
                'check_in' => Yii::t('app', 'Check In'),
                'created_by' => Yii::t('app', 'Created By'),
                'created' => Yii::t('app', 'Created'),
                'modified_by' => Yii::t('app', 'Modified By'),
                'modified' => Yii::t('app', 'Modified'),
                'cliente' => null,
                'pais' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('cliente_id', $this->cliente_id);
        $criteria->compare('code', $this->code, true);
        $criteria->compare('calle', $this->calle, true);
        $criteria->compare('poblacion', $this->poblacion, true);
        $criteria->compare('ciudad', $this->ciudad, true);
        $criteria->compare('pobox', $this->pobox, true);
        $criteria->compare('comuna', $this->comuna, true);
        $criteria->compare('pais_id', $this->pais_id);
        $criteria->compare('ref1', $this->ref1, true);
        $criteria->compare('ref2', $this->ref2, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('used_by', $this->used_by);
        $criteria->compare('check_in', $this->check_in, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('created', $this->created, true);
        $criteria->compare('modified_by', $this->modified_by);
        $criteria->compare('modified', $this->modified, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}